{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/display-fetch.service\";\nimport * as i2 from \"ngx-glide\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"ngxGlide\"];\n\nfunction GlideComponent_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"img\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const file_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", file_r3.name, i0.ɵɵsanitizeUrl);\n  }\n}\n\nconst _c1 = function () {\n  return {\n    perView: 1\n  };\n};\n\nconst _c2 = function () {\n  return {\n    perView: 2\n  };\n};\n\nconst _c3 = function (a0, a1) {\n  return {\n    \"768\": a0,\n    \"1200\": a1\n  };\n};\n\nfunction GlideComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ngx-glide\", 1, 2);\n    i0.ɵɵtemplate(3, GlideComponent_ng_container_0_ng_container_3_Template, 2, 1, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"perView\", 3)(\"gap\", 50)(\"showArrows\", false)(\"showBullets\", false)(\"type\", \"carousel\")(\"autoplay\", 3000)(\"hoverpause\", true)(\"swipeThreshold\", 10)(\"dragThreshold\", 12)(\"draggable\", true)(\"touchRatio\", 0.5)(\"touchAngle\", 45)(\"animationDuration\", 1000)(\"rewind\", true)(\"rewindDuration\", 800)(\"animationTimingFunc\", \"ease-out\")(\"direction\", \"ltr\")(\"breakpoints\", i0.ɵɵpureFunction2(21, _c3, i0.ɵɵpureFunction0(19, _c1), i0.ɵɵpureFunction0(20, _c2)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.imageFileNames);\n  }\n}\n\nexport let GlideComponent = /*#__PURE__*/(() => {\n  class GlideComponent {\n    constructor(display) {\n      this.display = display;\n      this.pageLoaded = false;\n      this.Buscar();\n    }\n\n    ngOnInit() {\n      this.Buscar();\n    }\n\n    handleImageError(event) {\n      console.error('Error loading image:', event.target.src);\n    }\n\n    Buscar() {\n      this.display.performGetEx().subscribe(data => {\n        this.imageFileNames = data;\n        console.log(this.imageFileNames);\n      });\n    }\n\n  }\n\n  GlideComponent.ɵfac = function GlideComponent_Factory(t) {\n    return new (t || GlideComponent)(i0.ɵɵdirectiveInject(i1.DisplayFetchService));\n  };\n\n  GlideComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GlideComponent,\n    selectors: [[\"app-glide\"]],\n    viewQuery: function GlideComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ngxGlide = _t.first);\n      }\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"perView\", \"gap\", \"showArrows\", \"showBullets\", \"type\", \"autoplay\", \"hoverpause\", \"swipeThreshold\", \"dragThreshold\", \"draggable\", \"touchRatio\", \"touchAngle\", \"animationDuration\", \"rewind\", \"rewindDuration\", \"animationTimingFunc\", \"direction\", \"breakpoints\"], [\"ngxGlide\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"src\"]],\n    template: function GlideComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, GlideComponent_ng_container_0_Template, 4, 24, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.imageFileNames && ctx.imageFileNames.length > 0);\n      }\n    },\n    dependencies: [i2.NgxGlideComponent, i3.NgForOf, i3.NgIf],\n    styles: [\"img[_ngcontent-%COMP%]{display:block;position:relative;left:0;bottom:0;height:100%;width:100%;object-fit:cover}\"]\n  });\n  return GlideComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}