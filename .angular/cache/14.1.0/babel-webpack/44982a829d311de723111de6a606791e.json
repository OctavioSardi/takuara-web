{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/display-fetch.service\";\nimport * as i2 from \"ngx-glide\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"ngxGlide\"];\n\nfunction GlideComponent_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"img\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const file_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", file_r3.name, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction GlideComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ngx-glide\", null, 1);\n    i0.ɵɵtemplate(3, GlideComponent_ng_container_0_ng_container_3_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.imageFileNames);\n  }\n}\n\nexport let GlideComponent = /*#__PURE__*/(() => {\n  class GlideComponent {\n    constructor(display) {\n      this.display = display;\n      this.pageLoaded = false;\n      this.ngxGlide.perView = 3;\n      this.ngxGlide.gap = 50;\n      this.ngxGlide.showArrows = false;\n      this.ngxGlide.showBullets = false;\n      this.ngxGlide.type = 'carousel';\n      this.ngxGlide.autoplay = 3000;\n      this.ngxGlide.hoverpause = true;\n      this.ngxGlide.swipeThreshold = 10;\n      this.ngxGlide.dragThreshold = 12;\n      this.ngxGlide.touchRatio = 0.5;\n      this.ngxGlide.touchAngle = 45;\n      this.ngxGlide.animationDuration = 1000;\n      this.ngxGlide.rewind = true;\n      this.ngxGlide.rewindDuration = 800;\n      this.ngxGlide.animationTimingFunc = 'ease-out';\n      this.ngxGlide.direction = 'ltr';\n      this.ngxGlide.breakpoints = {\n        '768': {\n          perView: 1\n        },\n        '1200': {\n          perView: 2\n        }\n      };\n      this.Buscar();\n    }\n\n    ngOnInit() {\n      this.Buscar();\n    }\n\n    handleImageError(event) {\n      console.error('Error loading image:', event.target.src);\n    }\n\n    Buscar() {\n      this.display.performGetEx().subscribe(data => {\n        this.imageFileNames = data;\n        console.log(this.imageFileNames);\n      });\n    }\n\n  }\n\n  GlideComponent.ɵfac = function GlideComponent_Factory(t) {\n    return new (t || GlideComponent)(i0.ɵɵdirectiveInject(i1.DisplayFetchService));\n  };\n\n  GlideComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GlideComponent,\n    selectors: [[\"app-glide\"]],\n    viewQuery: function GlideComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ngxGlide = _t.first);\n      }\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"ngxGlide\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"src\"]],\n    template: function GlideComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, GlideComponent_ng_container_0_Template, 4, 1, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.imageFileNames && ctx.imageFileNames.length > 0);\n      }\n    },\n    dependencies: [i2.NgxGlideComponent, i3.NgForOf, i3.NgIf]\n  });\n  return GlideComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}