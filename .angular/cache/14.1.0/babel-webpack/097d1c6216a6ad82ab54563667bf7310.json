{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/display-fetch.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-glide\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"ngxGlide\"];\n\nfunction GlideComponent_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"img\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", file_r3.name, i0.ɵɵsanitizeUrl);\n  }\n}\n\nconst _c1 = function () {\n  return {\n    perView: 1\n  };\n};\n\nconst _c2 = function () {\n  return {\n    perView: 2\n  };\n};\n\nconst _c3 = function (a0, a1) {\n  return {\n    \"768\": a0,\n    \"1200\": a1\n  };\n};\n\nfunction GlideComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"ngx-glide\", 6, 7);\n    i0.ɵɵtemplate(3, GlideComponent_div_5_div_3_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"perView\", 3)(\"gap\", 80)(\"showArrows\", false)(\"showBullets\", false)(\"type\", \"carousel\")(\"autoplay\", 3000)(\"hoverpause\", false)(\"swipeThreshold\", 10)(\"dragThreshold\", 12)(\"touchRatio\", 0.5)(\"touchAngle\", 45)(\"animationDuration\", 1000)(\"rewind\", true)(\"rewindDuration\", 800)(\"animationTimingFunc\", \"ease-out\")(\"direction\", \"ltr\")(\"breakpoints\", i0.ɵɵpureFunction2(20, _c3, i0.ɵɵpureFunction0(18, _c1), i0.ɵɵpureFunction0(19, _c2)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.imageFileNames);\n  }\n}\n\nexport let GlideComponent = /*#__PURE__*/(() => {\n  class GlideComponent {\n    constructor(display, router) {\n      this.display = display;\n      this.router = router;\n      this.pageLoaded = false;\n      this.Buscar();\n    }\n\n    ngOnInit() {// this.Buscar();\n    }\n\n    handleImageError(event) {\n      console.error('Error loading image:', event.target.src);\n    }\n\n    Buscar() {\n      this.display.performGetEx().subscribe(data => {\n        this.imageFileNames = data;\n        console.log(this.imageFileNames);\n      });\n    }\n\n  }\n\n  GlideComponent.ɵfac = function GlideComponent_Factory(t) {\n    return new (t || GlideComponent)(i0.ɵɵdirectiveInject(i1.DisplayFetchService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  GlideComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GlideComponent,\n    selectors: [[\"app-glide\"]],\n    viewQuery: function GlideComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ngxGlide = _t.first);\n      }\n    },\n    decls: 6,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"page\"], [1, \"section\", \"sec1\"], [\"id\", \"sec3\", 1, \"mb-3\", \"text-center\"], [\"class\", \"carrusel\", 4, \"ngIf\"], [1, \"carrusel\"], [3, \"perView\", \"gap\", \"showArrows\", \"showBullets\", \"type\", \"autoplay\", \"hoverpause\", \"swipeThreshold\", \"dragThreshold\", \"touchRatio\", \"touchAngle\", \"animationDuration\", \"rewind\", \"rewindDuration\", \"animationTimingFunc\", \"direction\", \"breakpoints\"], [\"ngxGlide\", \"\"], [\"class\", \"foto\", 4, \"ngFor\", \"ngForOf\"], [1, \"foto\"], [3, \"src\"]],\n    template: function GlideComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n        i0.ɵɵtext(4, \"5 A\\u00F1os Comunicando Diferente!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, GlideComponent_div_5_Template, 4, 23, \"div\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.imageFileNames && ctx.imageFileNames.length > 0);\n      }\n    },\n    dependencies: [i3.NgxGlideComponent, i4.NgForOf, i4.NgIf],\n    styles: [\".container[_ngcontent-%COMP%]   .page[_ngcontent-%COMP%]{position:relative;align-items:center;justify-content:center;height:80vh;z-index:0;margin-bottom:3vh}.carrusel[_ngcontent-%COMP%]{height:90%}.foto[_ngcontent-%COMP%]{height:100%}img[_ngcontent-%COMP%]{display:block;position:relative;left:0;bottom:0;width:100%;height:auto;object-fit:contain}@media only screen and (max-width: 768px){.container[_ngcontent-%COMP%]   .page[_ngcontent-%COMP%]{padding-top:2rem;height:100%}}\"]\n  });\n  return GlideComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}